<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:ProteusMMX.Controls;assembly=ProteusMMX"
             xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:dependencyinterface="clr-namespace:ProteusMMX.DependencyInterface"
             xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
             xmlns:control1="clr-namespace:ProteusMMX.Controls"
             x:Class="ProteusMMX.Views.Workorder.CreateWorkorderPage"
             Title="{Binding PageTitle}"
             BackgroundColor="{StaticResource BackgroundColor}" >

    <ContentPage.Resources>
        <ResourceDictionary>
            <!--<converter:BooleanToColorConverter x:Key="ColorConverter" />-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Name="MenuItem2" Order="Primary" Icon="dots.png" Text=":" Priority="0" Command="{Binding ToolbarCommand}" >
            <ToolbarItem.Icon>
                <OnPlatform x:TypeArguments="FileImageSource">
                    <OnPlatform.iOS>
                        <FileImageSource File="dots.png"/>
                    </OnPlatform.iOS>
                    <OnPlatform.Android>
                        <FileImageSource File="Assets/dots.png"/>
                    </OnPlatform.Android>
                    <OnPlatform.WinPhone>
                        <FileImageSource File="Assets/dots.png"/>
                    </OnPlatform.WinPhone>
                </OnPlatform>
            </ToolbarItem.Icon>
        </ToolbarItem>
    </ContentPage.ToolbarItems>



    <ContentPage.Content>
        <Grid>

            <Grid VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ScrollView Grid.Row="1">
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Grid
                Padding="10,10,10,10"
                RowSpacing="5"
                VerticalOptions="Fill">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="*" />
                                <ColumnDefinition  Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackLayout Orientation="Vertical"  Grid.Row="0" Grid.ColumnSpan="2" IsVisible="{Binding WorkorderNumberIsVisible}" >
                                <Label TextColor="#006de0" FontAttributes="Bold" FontSize="16" FontFamily="Ebrima">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding WorkorderNumbeTitle}"/>
                                            <Span Text="{Binding WorkorderNumberText}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                            </StackLayout>
                            
                            <!--<Label Text="{Binding WorkorderNumbeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <Label Text="{Binding WorkorderNumberText}"/>
                            </StackLayout>-->

                            <!--<StackLayout Orientation="Vertical" Grid.Row="0" Grid.Column="1" IsVisible="{Binding JobNumberIsVisible}">
                                <Label Text="{Binding JobNumberTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <Label Text="{Binding JobNumberText}"/>
                            </StackLayout>-->


                            <StackLayout Orientation="Vertical" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsVisible="{Binding DescriptionIsVisible}">

                                <Label Text="{Binding DescriptionTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>


                                <!--<Editor Text="{Binding DescriptionText}" IsEnabled="{Binding DescriptionIsEnable , Mode=TwoWay}"/>-->
                                <!--<dependencyinterface:CustomEditor Text="{Binding DescriptionText}" IsEnabled="{Binding DescriptionIsEnable , Mode=TwoWay}"></dependencyinterface:CustomEditor>-->
                                <border:SfBorder
                                    Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry x:Name="Description" Text="{Binding DescriptionText}" IsEnabled="{Binding DescriptionIsEnable , Mode=TwoWay}"
                            TextColor="{DynamicResource Gray-900}" />
                                </border:SfBorder>
                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="2" Grid.Column="0"  IsVisible="{Binding RequiredDateIsVisible}">
                                <Label Text="{Binding RequiredDateTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <controls:RequiredDateCustomDatePicker Margin="0,8,0,0" SelectedDate="{Binding RequiredDate1}" MinimumDate="{Binding MinimumRequiredDate}" IsEnabled="{Binding RequiredDateIsEnable}" />
                                <!--<DatePicker Date="{Binding RequiredDate}"  MinimumDate="{Binding MinimumRequiredDate}" IsEnabled="{Binding RequiredDateIsEnable}"/>-->
                                </border:SfBorder>
                            </StackLayout>
                            <StackLayout Orientation="Vertical" Grid.Row="2" Grid.Column="1"  IsVisible="{Binding WorkStartedDateIsVisible}">
                                <Label Text="{Binding WorkStartedDateTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <controls:CustomDatePicker Margin="0,8,0,0" SelectedDate="{Binding WorkStartedDate1}" MinimumDate="{Binding MinimumWorkStartedDate}" MaximumDate="{Binding MaximumWorkStartedDate}" WarningText="{Binding WorkStartedDateWarningText}" IsEnabled="{Binding WorkStartedDateIsEnable}" />
                                </border:SfBorder>
                            </StackLayout>

                            <!--<StackLayout Orientation="Vertical" Grid.Row="5" Grid.Column="0">
                                <Label Text="{Binding WorkorderCompletionDateTitle}"/>
                                <controls:CustomDatePicker SelectedDate="{Binding WorkorderCompletionDate}" MinimumDate="{Binding MinimumWorkorderCompletionDate}" MaximumDate="{Binding MaximumWorkorderCompletionDate}" WarningText="{Binding WorkorderCompletionDateWarningText}" />
                            </StackLayout>-->

                            <StackLayout Orientation="Vertical" Grid.Row="3" Grid.Column="0"  IsVisible="{Binding AssetIsVisible}">
                                <Label Text="{Binding FacilityTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <!--<border:SfBorder Style="{StaticResource SfBorderStyle}">-->
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding FacilityName}" Style="{StaticResource SfButtonStyles}" Command="{Binding FacilityCommand}" IsEnabled="{Binding FacilityIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                                <!--</border:SfBorder>-->
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="3" Grid.Column="1" IsVisible="{Binding AssetIsVisible}" >
                                <Label Text="{Binding LocationTitle}" TextColor="Black" IsVisible="{Binding LocationIsVisibleForLicensing}" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding LocationName}" Style="{StaticResource SfButtonStyles}" Command="{Binding LocationCommand}" IsEnabled="{Binding AssetIsEnable}" IsVisible="{Binding LocationIsVisibleForLicensing}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="4" Grid.Column="0" IsVisible="{Binding AssetIsVisible}">
                                <Label Text="{Binding AssetsTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding AssetName}" Style="{StaticResource SfButtonStyles}" Command="{Binding AssetCommand}" IsEnabled="{Binding AssetIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="4" Grid.Column="1" IsVisible="{Binding AssetIsVisible}">
                                <Label Text="{Binding AssetSystemTitle}" TextColor="Black" IsVisible="{Binding AssetSystemIsVisibleForLicensing}" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding AssetSystemName}" Style="{StaticResource SfButtonStyles}" Command="{Binding AssetSystemCommand}" IsVisible="{Binding AssetSystemIsVisibleForLicensing}" IsEnabled="{Binding AssetIsEnable}" CornerRadius="5" />
                                </border:SfBorder>
                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="5" Grid.Column="0"  IsVisible="{Binding AssignToEmployeeIsVisible}">
                                <Label Text="{Binding AssignToEmployeeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding AssignToEmployeeName}" Style="{StaticResource SfButtonStyles}" Command="{Binding AssignToCommand}" IsEnabled="{Binding AssignToEmployeeIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout  IsVisible="{Binding IsCostLayoutIsVisibleForTab}"  Grid.Row="6">
                                <StackLayout Orientation="Horizontal">
                                    <buttons:SfSwitch  IsEnabled="{Binding IsCostLayoutIsEnable}" IsOn="{Binding IsCostDistributed, Mode=TwoWay}"   VerticalOptions="Start" x:Uid="MySwitch" >
                                    </buttons:SfSwitch>
                                    <Label     FontAttributes="Bold" Text="{Binding DistributeCostforAssetsystem}" VerticalTextAlignment="Start" HorizontalTextAlignment="Start" TextColor="Black" >

                                    </Label>
                                </StackLayout>

                                <StackLayout Grid.Column="2" Orientation="Horizontal" IsVisible="{Binding IsCostDistributed , Mode=TwoWay}" >
                                    <buttons:SfRadioButton CheckedColor="DeepSkyBlue" IsVisible="{Binding IsCostLayoutIsVisibleForChild}" IsChecked="{Binding ChildCostDistributed}" Margin="10,10,10,10" Text="{Binding ChargeCostsOnlyToChildAssets}" StateChanged="RadioButton_StateChanged"></buttons:SfRadioButton>
                                </StackLayout>
                                <StackLayout Orientation="Horizontal" IsVisible="{Binding IsCostDistributed , Mode=TwoWay}">
                                    <buttons:SfRadioButton CheckedColor="DeepSkyBlue" IsVisible="{Binding IsCostLayoutIsVisibleForParent}" IsChecked="{Binding ParentCostDistributed,Mode=TwoWay}" Margin="10,10,10,10" Text="{Binding ParentCostsOnly}" StateChanged="Button1_StateChanged"></buttons:SfRadioButton>

                                </StackLayout>

                            </StackLayout>

                            <StackLayout IsVisible="{Binding IsCostLayoutIsVisibleForPhone}" Grid.Row="6" Grid.ColumnSpan="2" >
                                <StackLayout Orientation="Horizontal">
                                    <buttons:SfSwitch   IsEnabled="{Binding IsCostLayoutIsEnable}" IsOn="{Binding IsCostDistributed, Mode=TwoWay}" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand" x:Uid="MySwitch" >
                                    </buttons:SfSwitch>

                                    <Label FontAttributes="Bold"  Text="{Binding DistributeCostforAssetsystem}" FontSize="Small" TextColor="Black" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand">
                                    </Label>
                                </StackLayout>

                                <StackLayout Orientation="Horizontal" IsVisible="{Binding IsCostDistributed , Mode=TwoWay}" >
                                    <buttons:SfRadioButton CheckedColor="DeepSkyBlue" x:Name="RadioButton" IsChecked="{Binding ChildCostDistributed}" Text="{Binding ChargeCostsOnlyToChildAssets}" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand" StateChanged="RadioButton_StateChanged"></buttons:SfRadioButton>
                                </StackLayout>
                                <StackLayout Orientation="Horizontal" IsVisible="{Binding IsCostDistributed , Mode=TwoWay}">
                                    <buttons:SfRadioButton CheckedColor="DeepSkyBlue" x:Name="Button1" IsChecked="{Binding ParentCostDistributed,Mode=TwoWay}"  Text="{Binding ParentCostsOnly}" HorizontalOptions="StartAndExpand" VerticalOptions='StartAndExpand' StateChanged="Button1_StateChanged"></buttons:SfRadioButton>
                                </StackLayout>

                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="7" Grid.Column="0" IsVisible="{Binding WorkorderRequesterIsVisible}">
                                <Label Text="{Binding WorkorderRequesterTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding WorkorderRequesterName}" Style="{StaticResource SfButtonStyles}" Command="{Binding WorkorderRequesterCommand}"  IsEnabled="{Binding WorkorderRequesterIsEnable}" CornerRadius="5" />
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="7" Grid.Column="1" IsVisible="{Binding CostCenterIsVisible}">
                                <Label Text="{Binding CostCenterTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding CostCenterName}" Style="{StaticResource SfButtonStyles}" Command="{Binding CostCenterCommand}" IsEnabled="{Binding CostCenterIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="8" Grid.Column="0" IsVisible="{Binding PriorityIsVisible}">
                                <Label Text="{Binding PriorityTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding PriorityName}" Style="{StaticResource SfButtonStyles}" Command="{Binding PriorityCommand}" IsEnabled="{Binding PriorityIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="8" Grid.Column="1" IsVisible="{Binding ShiftIsVisible}">
                                <Label Text="{Binding ShiftTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding ShiftName}" Style="{StaticResource SfButtonStyles}" Command="{Binding ShiftCommand}" IsEnabled="{Binding ShiftIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="9" Grid.Column="0" IsVisible="{Binding WorkorderStatusIsVisible}">
                                <Label Text="{Binding WorkorderStatusTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding WorkorderStatusName}" Style="{StaticResource SfButtonStyles}" Command="{Binding WorkorderStatusCommand}"  IsEnabled="{Binding WorkorderStatusIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="9" Grid.Column="1" IsVisible="{Binding WorkorderTypeIsVisible}">
                                <Label Text="{Binding WorkorderTypeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding WorkorderTypeName}" Style="{StaticResource SfButtonStyles}" Command="{Binding WorkorderTypeCommand}" IsEnabled="{Binding WorkorderTypeIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="10" Grid.Column="0" IsVisible="{Binding CauseIsVisible}">
                                <Label Text="{Binding CauseTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding CauseName}" Style="{StaticResource SfButtonStyles}" Command="{Binding CauseCommand}" IsEnabled="{Binding CauseIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="10" Grid.Column="1" IsVisible="{Binding MaintenanceCodeIsVisible}">
                                <Label Text="{Binding MaintenanceCodeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <buttons:SfButton Text="{Binding MaintenanceCodeName}" Style="{StaticResource SfButtonStyles}" Command="{Binding MaintenanceCodeCommand}"  IsEnabled="{Binding MaintenanceCodeIsEnable}" CornerRadius="5"/>
                                </border:SfBorder>
                            </StackLayout>


                            <StackLayout Orientation="Vertical" Grid.Row="11" Grid.Column="0"  IsVisible="{Binding EstimstedDowntimeIsVisible}">
                                <Label Text="{Binding EstimstedDowntimeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>

                                <!--<controls:NumericEntry Text="{Binding EstimstedDowntimeText}" IsEnabled="{Binding EstimstedDowntimeIsEnable}"/>-->
                                <border:SfBorder
                                    Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry
                                   
                                    x:Name="EstimstedDowntime"
                                           
                                        TextChanged="NumericEntry_TextChanged"    
                            Text="{Binding EstimstedDowntimeText}"
                                        IsEnabled="{Binding EstimstedDowntimeIsEnable , Mode=TwoWay}"
                            TextColor="{DynamicResource Gray-900}" />
                                </border:SfBorder>

                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="11" Grid.Column="1"  IsVisible="{Binding ActualDowntimeIsVisible}">
                                <Label Text="{Binding ActualDowntimeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <!--<controls:NumericEntry Text="{Binding ActualDowntimeText}" IsEnabled="{Binding ActualDowntimeIsEnable}" />-->
                                <border:SfBorder
                                    Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry
                            x:Name="ActualDowntime"
                                       
                            Text="{Binding ActualDowntimeText}"
                                        IsEnabled="{Binding ActualDowntimeIsEnable , Mode=TwoWay}"
                                        TextChanged="NumericEntry_TextChanged_1"
                            TextColor="{DynamicResource Gray-900}" />
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="12" Grid.Column="0" IsVisible="{Binding MiscellaneousLabourCostIsVisible}">
                                <Label Text="{Binding MiscellaneousLabourCostTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <!--<controls:NumericEntry Text="{Binding MiscellaneousLabourCostText}" IsEnabled="{Binding MiscellaneousLabourCostIsEnable}"/>-->
                                <border:SfBorder   Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry
                                   
                                 
                            x:Name="MiscellaneousLabourCost"
                                       
                          
                            Text="{Binding MiscellaneousLabourCostText}"
                                        IsEnabled="{Binding MiscellaneousLabourCostIsEnable , Mode=TwoWay}"
                                        TextChanged="NumericEntry_TextChanged_2"
                            TextColor="{DynamicResource Gray-900}" />
                                </border:SfBorder>
                            </StackLayout>

                            <StackLayout Orientation="Vertical" Grid.Row="12" Grid.Column="1" IsVisible="{Binding MiscellaneousMaterialCostIsVisible}">
                                <Label Text="{Binding MiscellaneousMaterialCostTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <!--<controls:NumericEntry Text="{Binding MiscellaneousMaterialCostText}" IsEnabled="{Binding MiscellaneousMaterialCostIsEnable}"/>-->
                                <border:SfBorder
                                    Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry
                            x:Name="MiscellaneousMaterialCost"                              
                            Text="{Binding MiscellaneousMaterialCostText}"
                                   
                             IsEnabled="{Binding MiscellaneousMaterialCostIsEnable , Mode=TwoWay}"
                                    TextChanged="NumericEntry_TextChanged_3"
                            TextColor="{DynamicResource Gray-900}" />
                                </border:SfBorder>

                            </StackLayout>

                            <StackLayout  Orientation="Vertical" Grid.Row="13" Grid.Column="0" IsVisible="{Binding CurrentRuntimeIsVisible}" >
                                <Label Text="{Binding CurrentRuntimeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                    <control1:CustomEntry
                           x:Name="CurrentRuntime"                              
                           Text="{Binding CurrentRuntimeText}"
                                  
                           
                           TextColor="{DynamicResource Gray-900}"
                                   IsEnabled="{Binding CurrentRuntimeIsEnable , Mode=TwoWay}"/>
                                </border:SfBorder>
                            </StackLayout>
                        </Grid>

                        <Grid
                Padding="10,10,10,10"
                RowSpacing="5"
                VerticalOptions="Fill" Grid.Row="1">



                        </Grid>
                     
                        <Grid Margin="10,0,0,0" Grid.Row="2" x:Name="Grid_column" IsVisible="{Binding AdditionalDetailsIsVisible}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1500*" ></ColumnDefinition>
                                <ColumnDefinition Width="40*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <StackLayout  Orientation="Vertical" Grid.Column="0" Grid.Row="0"  >
                                <Label Text="{Binding AdditionalDetailsTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}" HeightRequest="150"  WidthRequest="{Binding Source={x:Reference Grid_column},Path=ColumnDefinitions[0].Width.Value}" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand">
                                    <control1:UnderLineEditor   Text="{Binding AdditionalDetailsText}" IsEnabled="{Binding AdditionalDetailsIsEnable, Mode=TwoWay}" />
                                </border:SfBorder>
                                <Label HorizontalOptions="End" Grid.Column="1" Text="{Binding MoreText}" TextColor="Accent" FontAttributes="Bold" >
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer
                                        Command="{Binding TapCommand2}"
                                         NumberOfTapsRequired="1" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </StackLayout>


                            <Image Grid.Column="1" Grid.Row="0" Source="Assets/mic.png">
                                <Image.Source>
                                    <OnPlatform  x:TypeArguments="ImageSource">
                                        <OnPlatform.iOS>mic.png</OnPlatform.iOS>
                                        <OnPlatform.Android>mic.png</OnPlatform.Android>
                                        <OnPlatform.WinPhone>Assets/mic.png</OnPlatform.WinPhone>
                                    </OnPlatform>
                                </Image.Source>
                                <Image.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Command="{Binding TapCommand}"
                                         NumberOfTapsRequired="1" />
                                </Image.GestureRecognizers>
                            </Image>

                        </Grid>



                        <Grid Margin="10,0,0,0"  Grid.Row="3" x:Name="Grid_column1" IsVisible="{Binding InternalNotesIsVisible}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1500*" ></ColumnDefinition>
                                <ColumnDefinition Width="40*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <StackLayout Orientation="Vertical" Grid.Column="0" Grid.Row="0"  >
                                <Label Text="{Binding InternalNotesTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                    <Label.FontAttributes>
                                        <OnPlatform x:TypeArguments="FontAttributes">
                                            <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                            <OnPlatform.Android>Bold</OnPlatform.Android>
                                        </OnPlatform>
                                    </Label.FontAttributes>
                                </Label>
                                <border:SfBorder Style="{StaticResource SfBorderStyle}" HeightRequest="150"  WidthRequest="{Binding Source={x:Reference Grid_column},Path=ColumnDefinitions[0].Width.Value}" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand">
                                    <control1:UnderLineEditor  Text="{Binding InternalNoteText}" IsEnabled="{Binding InternalNotesIsEnable, Mode=TwoWay}" />
                                </border:SfBorder>
                                <Label HorizontalOptions="End" Grid.Column="1" Text="{Binding MoreText}" TextColor="Accent" FontAttributes="Bold" >
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer
                                        Command="{Binding TapCommand3}"
                                         NumberOfTapsRequired="1" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </StackLayout>

                        </Grid>

                       
                        <Button x:Name="SaveButton" Text="{Binding SaveTitle}" Style="{StaticResource SaveButtonStyle}" Grid.Row="4" Margin="10,10,10,10" Command="{Binding SaveWorkorderCommand}" IsVisible="{Binding EditWorkIsVisible}" IsEnabled="{Binding EditWorkIsEnable}" HeightRequest="40"  VerticalOptions="StartAndExpand"/>

                    </Grid>
                </ScrollView>

            </Grid>

            <ActivityIndicator IsVisible="{Binding OperationInProgress}" IsRunning="{Binding OperationInProgress}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand"/>

        </Grid>

    </ContentPage.Content>

</ContentPage>
