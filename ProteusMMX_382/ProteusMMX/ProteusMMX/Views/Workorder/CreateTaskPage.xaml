<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ProteusMMX.Views.Workorder.CreateTaskPage"
             xmlns:controls="clr-namespace:ProteusMMX.Controls;assembly=ProteusMMX"
             xmlns:dependencyinterface="clr-namespace:ProteusMMX.DependencyInterface"
             xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
             Title="{Binding PageTitle}"
             BackgroundColor="{StaticResource BackgroundColor}" >

    <ContentPage.Resources>
        <ResourceDictionary>
            <!--<converter:BooleanToColorConverter x:Key="ColorConverter" />-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Name="MenuItem2" Order="Primary" Icon="Dot.png" Text=":" Priority="0" Command="{Binding ToolbarCommand}" >
            <ToolbarItem.Icon>
                <OnPlatform x:TypeArguments="FileImageSource">
                    <OnPlatform.iOS>
                        <FileImageSource File="Dot.png"/>
                    </OnPlatform.iOS>
                    <OnPlatform.Android>
                        <FileImageSource File="Assets/Dot.png"/>
                    </OnPlatform.Android>
                    <OnPlatform.WinPhone>
                        <FileImageSource File="Assets/Dot.png"/>
                    </OnPlatform.WinPhone>
                </OnPlatform>
            </ToolbarItem.Icon>
        </ToolbarItem>
    </ContentPage.ToolbarItems>


    <ContentPage.Content>
        <Grid>
            <Grid VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ScrollView Grid.Row="0">
                    <Grid
                        Padding="10,10,10,10"
                        RowSpacing="5"
                        VerticalOptions="Fill">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="*" />
                            <ColumnDefinition  Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackLayout IsVisible="{Binding TaskIsVisible}" Orientation="Vertical" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                            <Label Text="{Binding TaskTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}" IsEnabled="{Binding TaskIsEnable}">
                                <buttons:SfButton Text="{Binding TaskName}" Style="{StaticResource SfButtonStyles}" Command="{Binding TaskCommand}"  />
                            </border:SfBorder>
                        </StackLayout>

                        <StackLayout Orientation="Vertical" IsVisible="{Binding TaskIsVisible}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <Label Text="{Binding DescriptionTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <!--<Editor Text="{Binding DescriptionText}" IsEnabled="{Binding DescriptionIsEnable , Mode=TwoWay}" HeightRequest="100"/>-->
                            <border:SfBorder Style="{StaticResource SfBorderStyle}" HeightRequest="100">
                                <controls:UnderLineEditor Text="{Binding DescriptionText}" IsEnabled="{Binding DescriptionIsEnable , Mode=TwoWay}" ></controls:UnderLineEditor>
                            </border:SfBorder>
                        </StackLayout>

                        <StackLayout IsVisible="{Binding EmployeeIsVisible}" Orientation="Vertical" Grid.Row="2" Grid.Column="0">
                            <Label Text="{Binding EmployeeTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}" IsEnabled="{Binding EmployeeIsEnable}">
                                <buttons:SfButton Text="{Binding EmployeeName}" Style="{StaticResource SfButtonStyles}" Command="{Binding EmployeeCommand}" IsEnabled="{Binding EmployeeIsEnable}" />
                            </border:SfBorder>
                        </StackLayout>

                        <StackLayout IsVisible="{Binding ContractorIsVisible}" Orientation="Vertical" Grid.Row="2" Grid.Column="1">
                            <Label Text="{Binding ContractorTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}"  IsEnabled="{Binding ContractorIsEnable}">
                                <buttons:SfButton Text="{Binding ContractorName}" Style="{StaticResource SfButtonStyles}" Command="{Binding ContractorCommand}" IsEnabled="{Binding ContractorIsEnable}" />
                            </border:SfBorder>
                        </StackLayout>

                        <StackLayout Orientation="Vertical" Grid.Row="3" Grid.ColumnSpan="2" Grid.Column="0" IsVisible="{Binding TaskStartedDateIsVisible}">
                            <Label Text="{Binding TaskStartedDateTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                <controls:CustomDatePicker SelectedDate="{Binding TaskStartedDate}" Margin="0,8,0,0" MinimumDate="{Binding MinimumTaskStartedDate}" MaximumDate="{Binding MaximumTaskStartedDate}" IsEnabled="{Binding TaskStartedDateIsEnable}"/>
                            </border:SfBorder>
                        </StackLayout>


                        <StackLayout Orientation="Vertical" Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0" IsVisible="{Binding TaskCompletionDateIsVisible}">
                            <Label Text="{Binding TaskCompletionDateTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                <controls:AddTaskCustomDatePicker SelectedDate="{Binding TaskCompletionDate}" Margin="0,8,0,0" MinimumDate="{Binding MinimumTaskCompletionDate}" MaximumDate="{Binding MaximumTaskCompletionDate}" IsEnabled="{Binding TaskCompletionDateIsEnable}" />
                            </border:SfBorder>
                        </StackLayout>

                        <StackLayout Orientation="Vertical" Grid.ColumnSpan="2" Grid.Row="5">
                            <Label Text="{Binding TaskArrivalDateTitle}" TextColor="Black" Style="{StaticResource LabelStyle}">
                                <Label.FontAttributes>
                                    <OnPlatform x:TypeArguments="FontAttributes">
                                        <OnPlatform.iOS>Bold</OnPlatform.iOS>
                                        <OnPlatform.Android>Bold</OnPlatform.Android>
                                    </OnPlatform>
                                </Label.FontAttributes>
                            </Label>
                            <border:SfBorder Style="{StaticResource SfBorderStyle}">
                                <controls:CustomDatePicker SelectedDate="{Binding TaskArrivalDate}" Margin="0,8,0,0"/>
                            </border:SfBorder>
                        </StackLayout>


                        <!--<Button Text="{Binding SaveTitle}" Style="{StaticResource SaveButtonStyle}" Grid.Row="4" Grid.ColumnSpan="2"  Command="{Binding SaveCommand}" />-->
                        <Button Grid.Row="6" Grid.ColumnSpan="2" CornerRadius="5" HorizontalOptions="CenterAndExpand" WidthRequest="150"
                        Command="{Binding SaveCommand}" Style="{StaticResource SaveButtonStyle}" Text="{Binding SaveTitle}" >
                        </Button>
                    </Grid>

                </ScrollView>

            </Grid>

            <ActivityIndicator IsVisible="{Binding OperationInProgress}" IsRunning="{Binding OperationInProgress}" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand"/>

        </Grid>


    </ContentPage.Content>
</ContentPage>